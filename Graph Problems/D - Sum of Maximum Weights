 Link :https://atcoder.jp/contests/abc214/tasks/abc214_d
 #include <bits/stdc++.h>
#define int long long
const int N=1e5+5;
using namespace std;
struct edge{
    int a;int b;int w;
};
vector<edge>edges;
int par[N];
int sz[N];
void init(int n){
    for(int i=1;i<=n;i++){
        par[i]=i;sz[i]=1;
    }
}
bool comp(edge a,edge b){
    return(a.w<b.w);
}
int getpar(int n){
    if(n==par[n]){
        return n;
    }
    return par[n]=getpar(par[n]);
}
void unite(int a,int b){
    a=getpar(a);b=getpar(b);
    if(a!=b){
        par[b]=a;
        sz[a]+=sz[b];
    }
}
int32_t main()
{
    int x;cin>>x;
    init(x);
    for(int i=0;i<x-1;i++){
        int a,b,w;cin>>a>>b>>w;
        edge f;f.a=a;f.b=b;f.w=w;
        edges.push_back(f);
    }
    sort(edges.begin(),edges.end(),comp);
    int res=0;
    for(auto u:edges){
        int sz1=sz[getpar(u.a)];
        int sz2=sz[getpar(u.b)];
        unite(u.a,u.b);
        res+=sz1*sz2*u.w;
    }
    cout<<res<<endl;

    return 0;
}
